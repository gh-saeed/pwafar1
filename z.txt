فلدر بندی ها uploads
راه‌حل: تغییر نام فایل روی دیسک

برای اینکه اسم فایل روی دیسک هم تغییر کنه، باید از fs/promises.rename() استفاده کنی تا فایل جابه‌جا بشه.
تغییر در PUT متد:

این قسمت رو باید به PUT اضافه کنی:

import { rename } from 'fs/promises';

و بعد از اینکه دیتابیس آپدیت شد، فایل هم جابه‌جا بشه:

const oldMedia = await Media.findById(db, new ObjectId(id));
if (!oldMedia) {
  return NextResponse.json({ error: 'Old media not found' }, { status: 404 });
}

const oldPath = join(process.cwd(), 'public', oldMedia.path);
const newPath = join(process.cwd(), 'public', 'uploads', filename);

try {
  await rename(oldPath, newPath);
} catch (err) {
  console.error('Error renaming file on disk:', err);
  return NextResponse.json({ error: 'Failed to rename file on disk' }, { status: 500 });
}

// همچنین مسیر جدید رو هم توی دیتابیس ذخیره کن:
await Media.update(db, new ObjectId(id), {
  filename,
  path: `/uploads/${filename}`
});

نکته مهم:

    مطمئن شو filename که کاربر وارد می‌کنه معتبر باشه و پسوند رو داشته باشه (یا خودش اضافه کن).

    حواست باشه اگر فایل با همون نام جدید از قبل وجود داره، باید یک مکانیزم جلوگیری یا تغییر نام (مثلاً اضافه کردن شمارنده) پیاده‌سازی کنی.

اگه خواستی اون قسمت تغییر نام اتوماتیک برای جلوگیری از تکرار رو هم برات می‌نویسم. 👌
You said:
اینم قسمت تغییر نام اتوماتیک بنویس 
ChatGPT said:

برای اینکه وقتی نام فایل در دیتابیس تغییر می‌کنه، فایل داخل پوشه uploads هم تغییر نام بده، باید در متد PUT که مسئول ویرایش اطلاعات رسانه‌هاست، مسیر فایل قدیمی رو پیدا کنیم و اون رو به نام جدید تغییر بدیم. در ادامه نسخه به‌روز‌شده‌ی تابع PUT در فایل API /api/media رو می‌بینی:
🔧 ویرایش تابع PUT:

import { rename } from 'fs/promises';
import { join } from 'path';

export async function PUT(request) {
  try {
    const { id, filename } = await request.json();

    if (!id || !filename) {
      return NextResponse.json({ error: 'Missing required parameters' }, { status: 400 });
    }

    const client = await clientPromise;
    const db = client.db();

    // ابتدا فایل قبلی را پیدا می‌کنیم
    const mediaItem = await Media.findById(db, new ObjectId(id));
    if (!mediaItem) {
      return NextResponse.json({ error: 'Media not found' }, { status: 404 });
    }

    const oldFilename = mediaItem.filename;
    const extension = oldFilename.split('.').pop();
    const newFilename = `${filename}.${extension}`;

    const uploadDir = join(process.cwd(), 'public', 'uploads');
    const oldPath = join(uploadDir, oldFilename);
    const newPath = join(uploadDir, newFilename);

    // تغییر نام فایل در فایل‌سیستم
    await rename(oldPath, newPath);

    // به‌روزرسانی مسیر و نام در دیتابیس
    await Media.update(db, new ObjectId(id), {
      filename: newFilename,
      path: `/uploads/${newFilename}`,
    });

    return NextResponse.json({ success: true });
  } catch (error) {
    console.error('Error updating filename:', error);
    return NextResponse.json({ error: 'Failed to update filename' }, { status: 500 });
  }
}

✅ نکات:

    حتما مطمئن شو که filename جدید فقط نام فایل باشه، بدون پسوند (مثل "new-name")، چون پسوند رو از نام اصلی قبلی می‌گیریم تا فرمت حفظ بشه.

    اگر می‌خوای پسوند هم قابل تغییر باشه، باید filename رو کامل (مثلاً new-name.jpg) بفرستی و سپس با path.extname و path.basename مدیریت کنی.

اگر خواستی کاربر پسوند رو هم تغییر بده، می‌تونم اون نسخه رو هم برات بنویسم.





@tiptap/react @tiptap/pm @tiptap/starter-kit @tiptap/extension-link @tiptap/extension-image